<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sys_ux_macroponent</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sys_ux_macroponent">dispatched_eventsISNOTEMPTY^ORhandled_eventsISNOTEMPTY^EQ<item endquery="false" field="dispatched_events" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="false" field="handled_events" goto="false" newquery="false" operator="ISNOTEMPTY" or="true" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Macroponent Before Delete</name>
        <order>1000</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	if(gs.isInteractive()){
		// This only happens for the CLI tool's changes.
		// An interactive user may edit as they wish.
		return;
	}
	var events = {"handled_events" :  current.handled_events+'', "dispatched_events" : current.dispatched_events + "" };
	var userPrefName = 'Events for Macroponent ' + current.sys_id;
	var upgr = new GlideRecord('sys_user_preference');
	if(!upgr.get('name', userPrefName)){
		upgr.initialize();
	}
	upgr.name = 'Events for Macroponent ' + current.sys_id;
	upgr.user = gs.getUserID();
	upgr.description = 'Saving events for UX Macroponent Definition (sys_ux_macroponent) so that the CLI tool does not wipe them out.  In order to stop this from happening and remove all events manually delete this user preference first.';
	upgr.value = JSON.stringify(events);
	upgr.update();
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>jon.lind</sys_created_by>
        <sys_created_on>2022-09-26 15:02:16</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>599cd32b87425910a46bfc86dabb35fa</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Macroponent Before Delete</sys_name>
        <sys_overrides/>
        <sys_package display_value="UIC Event Fixer" source="4de5e79e4f8ed190ff1f840321ad485d">4de5e79e4f8ed190ff1f840321ad485d</sys_package>
        <sys_policy/>
        <sys_scope display_value="UIC Event Fixer">4de5e79e4f8ed190ff1f840321ad485d</sys_scope>
        <sys_update_name>sys_script_599cd32b87425910a46bfc86dabb35fa</sys_update_name>
        <sys_updated_by>jon.lind</sys_updated_by>
        <sys_updated_on>2022-09-26 15:47:24</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=599cd32b87425910a46bfc86dabb35fa"/>
</record_update>
